name: Train ML Model

on:
  workflow_dispatch:
  push:

env:
  EXPORT_NAME: 'training-exports.zip'
  EXPORT_LOCATION: '../exports/en-tw-transformer-nmt/'
  PROJECT_DIR: 'projects/en-tw-transformer-nmt'
  TRAIN_SAMPLE: 1000

jobs:
  train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter keras papermill
          pip install -r requirements.txt

      - name: Download latest release checkpoints
        id: download-release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: "${{ github.repository }}"
          version: "latest"
          file: ${{ env.EXPORT_NAME }}
          target: "./${{ env.EXPORT_NAME }}.zip"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Unzip model checkpoints
        run: unzip $export_name -d $exports_location
        env:
          export_name: ${{ env.EXPORT_NAME }}
          exports_location: "${{ env.PROJECT_DIR }}/${{ env.EXPORT_LOCATION }}"

      - name: Execute Jupyter Notebook
        run: papermill $project_dir/main.ipynb -p exports_dir "$export_dir" -p training_sample $training_sample -p num_attention_layers 4
        env:
          training_sample: ${{ env.TRAIN_SAMPLE }}
          export_dir: ${{ env.EXPORT_LOCATION }}
          project_dir: ${{ env.PROJECT_DIR }}

      - name: Zip model checkpoints
        run: zip -r $export_name $exports_location/*
        env:
          export_name: ${{ env.EXPORT_NAME }}
          exports_location: "${{ env.PROJECT_DIR }}/${{ env.EXPORT_LOCATION }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: Release for run ${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload model checkpoint to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./${{ env.EXPORT_NAME }}"
          asset_name: ${{ env.EXPORT_NAME }}
          asset_content_type: application/zip
